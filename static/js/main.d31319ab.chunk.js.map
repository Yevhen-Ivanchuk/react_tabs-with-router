{"version":3,"sources":["types/PageRoutes.ts","Components/Tables.tsx","Pages/TabsPage.tsx","Pages/HomePage.tsx","Pages/ErrorPage.tsx","Components/PageNavLink.tsx","Components/Navigation.tsx","App.tsx","index.tsx"],"names":["PageRoutes","Tables","tabs","selectedTabsId","isSelected","tab","id","className","map","classNames","to","title","find","content","TabsPage","tabsId","useParams","HomePage","ErrorPage","PageNavLink","text","isActive","Navigation","home","App","ReactDOM","render","path","element","index","replace","notFound","document","getElementById"],"mappings":"uKAAYA,E,wDAAAA,K,SAAAA,E,aAAAA,E,cAAAA,M,gBCWCC,EAAmB,SAAC,GAA8B,IAAD,EAA3BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,eACjCC,EAAa,SAACC,GAAD,OAAcA,EAAIC,KAAOH,GAE5C,OACE,sBAAKI,UAAU,YAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,6BACGL,EAAKM,KAAI,SAAAH,GAAG,OACX,oBACE,UAAQ,MACRE,UAAWE,IAAW,CAAE,YAAaL,EAAWC,KAFlD,SAIE,cAAC,IAAD,CACEK,GAAIN,EAAWC,GAAOL,EAAWE,KAA7B,UAAuCF,EAAWE,KAAlD,YAA0DG,EAAIC,IADpE,SAGGD,EAAIM,iBAOf,qBAAKJ,UAAU,QAAQ,UAAQ,aAA/B,UACG,UAAAL,EAAKU,MAAK,SAAAP,GAAG,OAAIA,EAAIC,KAAOH,YAA5B,eAA6CU,UACzC,4BC/BPX,EAAc,CAClB,CAAEI,GAAI,QAASK,MAAO,QAASE,QAAS,eACxC,CAAEP,GAAI,QAASK,MAAO,QAASE,QAAS,eACxC,CAAEP,GAAI,QAASK,MAAO,QAASE,QAAS,gBAG7BC,EAAW,WACtB,IAAQC,EAAWC,cAAXD,OAER,OACE,qCACE,oBAAIR,UAAU,QAAd,uBAEA,cAAC,EAAD,CAAQL,KAAMA,EAAMC,eAAgBY,QCjB7BE,EAAW,kBACtB,oBAAIV,UAAU,QAAd,wBCDWW,EAAY,kBACvB,oBAAIX,UAAU,QAAd,6BCQWY,G,kBAAyB,SAAC,GAAD,IACpCT,EADoC,EACpCA,GACAU,EAFoC,EAEpCA,KAFoC,OAIpC,cAAC,IAAD,CACEV,GAAIA,EACJH,UAAW,gBAAGc,EAAH,EAAGA,SAAH,OAAkBZ,IAC3B,cACA,CACE,YAAaY,KALnB,SASGD,MCnBQE,EAAa,kBACxB,qBACEf,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaG,GAAIV,EAAWuB,KAAMH,KAAK,SACvC,cAAC,EAAD,CAAaV,GAAIV,EAAWE,KAAMkB,KAAK,iBCLlCI,EAAM,kBACjB,qCACE,cAAC,EAAD,IAEA,qBAAKjB,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,YCFRkB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAD,UAEE,eAAC,IAAD,CAAOC,KAAM3B,EAAWuB,KAAMK,QAAS,cAAC,EAAD,IAAvC,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CACED,KAAK,OACLC,QAAS,cAAC,IAAD,CAAUlB,GAAIV,EAAWuB,KAAMO,SAAO,MAEjD,eAAC,IAAD,CAAOH,KAAM3B,EAAWE,KAAxB,UACE,cAAC,IAAD,CAAO2B,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,SAGjC,cAAC,IAAD,CAAOD,KAAM3B,EAAW+B,SAAUH,QAAS,cAAC,EAAD,aAIjDI,SAASC,eAAe,W","file":"static/js/main.d31319ab.chunk.js","sourcesContent":["export enum PageRoutes {\n  home = '/',\n  tabs = '/tabs',\n  notFound = '*',\n}\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Tab } from '../types/Tab';\nimport { PageRoutes } from '../types/PageRoutes';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabsId?: string,\n};\n\nexport const Tables:FC<Props> = ({ tabs, selectedTabsId }) => {\n  const isSelected = (tab: Tab) => tab.id === selectedTabsId;\n\n  return (\n    <div className=\"container\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              data-cy=\"Tab\"\n              className={classNames({ 'is-active': isSelected(tab) })}\n            >\n              <Link\n                to={isSelected(tab) ? PageRoutes.tabs : `${PageRoutes.tabs}/${tab.id}`}\n              >\n                {tab.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find(tab => tab.id === selectedTabsId)?.content\n          || 'Please select a tab'}\n      </div>\n    </div>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { Tables } from '../Components/Tables';\nimport { Tab } from '../types/Tab';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsPage = () => {\n  const { tabsId } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <Tables tabs={tabs} selectedTabsId={tabsId} />\n    </>\n\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home page</h1>\n);\n","export const ErrorPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: FC<Props> = ({\n  to,\n  text,\n}) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      {\n        'is-active': isActive,\n      },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from './PageNavLink';\nimport { PageRoutes } from '../types/PageRoutes';\n\nexport const Navigation = () => (\n  <nav\n    className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n    data-cy=\"Nav\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to={PageRoutes.home} text=\"Home\" />\n        <PageNavLink to={PageRoutes.tabs} text=\"Tabs\" />\n      </div>\n    </div>\n  </nav>\n);\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { Navigation } from './Components/Navigation';\n\nexport const App = () => (\n  <>\n    <Navigation />\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </div>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport {\n  HashRouter, Navigate, Route, Routes,\n} from 'react-router-dom';\nimport { TabsPage } from './Pages/TabsPage';\nimport { PageRoutes } from './types/PageRoutes';\nimport { HomePage } from './Pages/HomePage';\nimport { ErrorPage } from './Pages/ErrorPage';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <Routes>\n\n      <Route path={PageRoutes.home} element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route\n          path=\"home\"\n          element={<Navigate to={PageRoutes.home} replace />}\n        />\n        <Route path={PageRoutes.tabs}>\n          <Route index element={<TabsPage />} />\n          <Route path=\":tabsId\" element={<TabsPage />} />\n        </Route>\n\n        <Route path={PageRoutes.notFound} element={<ErrorPage />} />\n      </Route>\n    </Routes>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}